function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Create a new Jekyll blog post
function blogpost() {
  today=$(date +%Y-%m-%d);
  touch $today-$@".md"
}

# Set up a new processing sketch, init git with a .gitignore
function newproc() {
	mkdir -p "$@" && cd "$_" && touch "$@".pde;
  git init;
  echo "/build-tmp" > .gitignore;
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* *;
	fi;
}

# Use Gitâ€™s colored diff when available
hash git &>/dev/null;
if [ $? -eq 0 ]; then
	function diff() {
		git diff --no-index --color-words "$@";
	}
fi;

# Create a git.io short URL
function gitio() {
	if [ -z "${1}" -o -z "${2}" ]; then
		echo "Usage: \`gitio slug url\`";
		return 1;
	fi;
	curl -i http://git.io/ -F "url=${2}" -F "code=${1}";
}

# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
function s() {
	if [ $# -eq 0 ]; then
    "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" .;
	else
    "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" "$@";
	fi;
}

# `v` with no arguments opens the current directory in Vim, otherwise opens the
# given location
function v() {
	if [ $# -eq 0 ]; then
    /Applications/MacVim.app/Contents/MacOS/Vim "$(fzf)";
	else
    /Applications/MacVim.app/Contents/MacOS/Vim "$@";
	fi;
}

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}
